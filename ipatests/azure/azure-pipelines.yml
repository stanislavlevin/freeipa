schedules:
- cron: "0 6 * * *"
  displayName: Daily tests
  branches:
    include:
    - sisyphus-ci
  always: true

variables:
  CI_RUNNER_LOGS_DIR: logs
  localsdir: $(Build.Repository.LocalPath)
  builddir: /__w/1/s

jobs:
- job: Build
  pool:
    vmImage: 'Ubuntu-16.04'
  container:
    image: stanislavlevin/freeipa-build-altlinux:sisyphus
    options: --cap-add=SYS_PTRACE --security-opt seccomp=unconfined --privileged
  steps:
    - template: templates/prepare-build.yml
    - script: |
        set -e
        echo "Running autoconf generator"
        ./autogen.sh
      displayName: Configure the project
    - script: |
        set -e
        git update-ref refs/heads/$(System.PullRequest.TargetBranch) origin/$(System.PullRequest.TargetBranch)
        make V=0 "GIT_BRANCH=$(System.PullRequest.TargetBranch)" fastlint
      displayName: Quick code style check
      condition: eq(variables['Build.Reason'], 'PullRequest')
    - script: |
        set -e
        echo "Build rpms"
        gear-rpm -ba -v \
            --define '_topdir $(builddir)/rpmbuild' \
            --without 'lint' \
            --without 'fasttest' \
            --without 'fastlint'
        mkdir -p $(builddir)/dist/{,s}rpms
        cp -v $(builddir)/rpmbuild/SRPMS/freeipa-*.src.rpm $(builddir)/dist/srpms/
        find $(builddir)/rpmbuild/RPMS/ -type f \( -not -name "*-debuginfo-*" \
            -a -name '*.rpm' \) -exec cp {} $(builddir)/dist/rpms/ \;
      displayName: Build packages
    - script: |
        set -e
        mkdir container
        cp -pr dist container/
        cp ipatests/azure/Dockerfile-altlinux.build-container container/Dockerfile
        cd container
        docker build -t freeipa-fedora-builder .
        docker save freeipa-fedora-builder | gzip > '$(builddir)/freeipa-fedora-builder-container.tar.gz'
      displayName: Create container image for test
    - template: templates/publish-build.yml

- job: Lint
  pool:
    vmImage: 'Ubuntu-16.04'
  container:
    image: stanislavlevin/freeipa-build-altlinux:sisyphus
    options: --cap-add=SYS_PTRACE --security-opt seccomp=unconfined --privileged
  steps:
    - template: templates/prepare-build.yml
    - script: |
        set -e
        echo "Running autoconf generator"
        ./autogen.sh
      displayName: Configure the project
    - script: |
        set -e
        echo "Running make target 'lint'"
        make V=0 lint
      displayName: Lint sources

- job: Tox
  pool:
    vmImage: 'Ubuntu-16.04'
  container:
    image: stanislavlevin/freeipa-build-altlinux:sisyphus
    options: --cap-add=SYS_PTRACE --security-opt seccomp=unconfined --privileged
  steps:
    - template: templates/prepare-build.yml
    - script: |
        set -e
        sudo apt-get install -y nss-tools python3-module-pip
        python3 -m pip install --user --upgrade pip setuptools pycodestyle
      displayName: 'Install prerequisites'
    - script: |
        set -e
        echo "Running tox"
        export LANG=en_US.utf8
        export LC_CTYPE=en_US.utf8
        locale
        tox.py3 -e py37,pypi,pylint3
      displayName: Tox
    - task: PublishTestResults@2
      inputs:
        testResultsFiles: '.tox/**/junit-*.xml'
        testRunTitle: 'Tox results'
      condition: succeededOrFailed()

- job: WebUI_Unit_Tests
  pool:
    vmImage: 'Ubuntu-16.04'
  container:
    image: stanislavlevin/freeipa-build-altlinux:sisyphus
    options: --cap-add=SYS_PTRACE --security-opt seccomp=unconfined --privileged
  steps:
    - template: templates/prepare-build.yml
    - script: |
        set -e
        sudo apt-get -y install npm fontconfig
      displayName: 'Install prerequisites'
    - script: |
        set -e
        echo "Running autoconf generator"
        ./autogen.sh
      displayName: Configure the project
    - script: |
        set -e
        echo "Running WebUI unit tests"
        cd $(builddir)/install/ui/js/libs && make
        cd $(builddir)/install/ui && npm install
        cd $(builddir)/install/ui && node_modules/grunt/bin/grunt --verbose test
      displayName: WebUI Unit Tests
    - task: PublishTestResults@2
      inputs:
        testResultsFiles: 'install/ui/_build/test-reports/TEST-*.xml'
        testRunTitle: 'Web UI unit test results'
      condition: succeededOrFailed()

- template: templates/test-jobs.yml
  parameters:
    jobName: GT_installation_TestInstallMaster
    jobTitle: [GT] installation_TestInstallMaster
    testsToRun:
    - test_integration/test_installation.py::TestInstallMaster
    taskToRun: run-integration-tests

- template: templates/test-jobs.yml
  parameters:
    jobName: GT_kerberos_flags
    jobTitle: [GT] kerberos_flags
    testsToRun:
    - test_integration/test_kerberos_flags.py
    taskToRun: run-integration-tests
    topology:
      client: 1

- template: templates/test-jobs.yml
  parameters:
    jobName: GT_dnssec_TestInstallDNSSECFirst
    jobTitle: [GT] dnssec_TestInstallDNSSECFirst
    testsToRun:
    - test_integration/test_dnssec.py::TestInstallDNSSECFirst
    taskToRun: run-integration-tests
    topology:
      replica: 1

- template: templates/test-jobs.yml
  parameters:
    jobName: GT_simple_replication
    jobTitle: [GT] simple_replication
    testsToRun:
    - test_integration/test_simple_replication.py
    taskToRun: run-integration-tests
    topology:
      replica: 1

- template: templates/test-jobs.yml
  parameters:
    jobName: GT_caless_TestServerReplicaCALessToCAFull
    jobTitle: [GT] caless_TestServerReplicaCALessToCAFull
    testsToRun:
    - test_integration/test_caless.py::TestServerReplicaCALessToCAFull
    taskToRun: run-integration-tests
    topology:
      replica: 1

- template: templates/test-jobs.yml
  parameters:
    jobName: GT_external_ca_TestExternalCA
    jobTitle: [GT] external_ca_TestExternalCA
    testsToRun:
    - test_integration/test_external_ca.py::TestExternalCA
    taskToRun: run-integration-tests
    topology:
      replica: 1
      client: 1

- template: templates/test-jobs.yml
  parameters:
    jobName: GT_external_ca_TestSelfExternalSelf
    jobTitle: [GT] external_ca_TestSelfExternalSelf
    testsToRun:
    - test_integration/test_external_ca.py::TestSelfExternalSelf
    taskToRun: run-integration-tests

- template: templates/test-jobs.yml
  parameters:
    jobName: GT_external_ca_TestExternalCAInstall
    jobTitle: [GT] external_ca_TestExternalCAInstall
    testsToRun:
    - test_integration/test_external_ca.py::TestExternalCAInstall
    taskToRun: run-integration-tests

# requires nothing, don't install anything
- template: templates/test-jobs.yml
  parameters:
    jobName: GT_topologies_and_testconfig
    jobTitle: [GT] topologies_and_testconfig
    testsToRun:
    - test_integration/test_topologies.py
    - test_integration/test_testconfig.py
    taskToRun: run-integration-tests

- template: templates/test-jobs.yml
  parameters:
    jobName: GT_commands
    jobTitle: [GT] commands
    testsToRun:
    - test_integration/test_commands.py
    taskToRun: run-integration-tests

- template: templates/test-jobs.yml
  parameters:
    jobName: GT_sudo
    jobTitle: [GT] sudo
    testsToRun:
    - test_integration/test_sudo.py
    taskToRun: run-integration-tests
    topology:
      client: 1

- template: templates/test-jobs.yml
  parameters:
    jobName: GT_forced_client_reenrollment
    jobTitle: [GT] forced_client_reenrollment
    testsToRun:
    - test_integration/test_forced_client_reenrollment.py
    taskToRun: run-integration-tests
    topology:
      replica: 1
      client: 1

- template: templates/test-jobs.yml
  parameters:
    jobName: GT_service_permissions
    jobTitle: [GT] service_permissions
    testsToRun:
    - test_integration/test_service_permissions.py
    taskToRun: run-integration-tests

- template: templates/test-jobs.yml
  parameters:
    jobName: GT_netgroup
    jobTitle: [GT] netgroup
    testsToRun:
    - test_integration/test_netgroup.py
    taskToRun: run-integration-tests

- template: templates/test-jobs.yml
  parameters:
    jobName: GT_replica_promotion_TestSubCAkeyReplication
    jobTitle: [GT] replica_promotion_TestSubCAkeyReplication
    testsToRun:
    - test_integration/test_replica_promotion.py::TestSubCAkeyReplication
    taskToRun: run-integration-tests
    topology:
      replica: 1

- template: templates/test-jobs.yml
  parameters:
    jobName: NT_test_dnssec_TestMigrateDNSSECMaster
    jobTitle: [NT] test_dnssec_TestMigrateDNSSECMaster
    testsToRun:
    - test_integration/test_dnssec.py::TestMigrateDNSSECMaster
    taskToRun: run-integration-tests
    topology:
      replica: 2

- template: templates/test-jobs.yml
  parameters:
    jobName: NT_test_http_kdc_proxy
    jobTitle: [NT] test_http_kdc_proxy
    testsToRun:
    - test_integration/test_http_kdc_proxy.py
    taskToRun: run-integration-tests
    topology:
      client: 1

- template: templates/test-jobs.yml
  parameters:
    jobName: NT_test_vault
    jobTitle: [NT] test_vault
    testsToRun:
    - test_integration/test_vault.py
    taskToRun: run-integration-tests
    topology:
      replica: 1

- template: templates/test-jobs.yml
  parameters:
    jobName: NT_test_installation_TestInstallWithCA1
    jobTitle: [NT] test_installation_TestInstallWithCA1
    testsToRun:
    - test_integration/test_installation.py::TestInstallWithCA1
    taskToRun: run-integration-tests
    topology:
      replica: 3

- template: templates/test-jobs.yml
  parameters:
    jobName: NT_test_installation_TestInstallWithCA2
    jobTitle: [NT] test_installation_TestInstallWithCA2
    testsToRun:
    - test_integration/test_installation.py::TestInstallWithCA2
    taskToRun: run-integration-tests
    topology:
      replica: 3

- template: templates/test-jobs.yml
  parameters:
    jobName: NT_test_installation_TestInstallWithCA_KRA1
    jobTitle: [NT] test_installation_TestInstallWithCA_KRA1
    testsToRun:
    - test_integration/test_installation.py::TestInstallWithCA_KRA1
    taskToRun: run-integration-tests
    topology:
      replica: 3

- template: templates/test-jobs.yml
  parameters:
    jobName: NT_test_installation_TestInstallWithCA_KRA2
    jobTitle: [NT] test_installation_TestInstallWithCA_KRA2
    testsToRun:
    - test_integration/test_installation.py::TestInstallWithCA_KRA2
    taskToRun: run-integration-tests
    topology:
      replica: 3

- template: templates/test-jobs.yml
  parameters:
    jobName: NT_test_installation_TestInstallWithCA_DNS1
    jobTitle: [NT] test_installation_TestInstallWithCA_DNS1
    testsToRun:
    - test_integration/test_installation.py::TestInstallWithCA_DNS1
    taskToRun: run-integration-tests
    topology:
      replica: 3

- template: templates/test-jobs.yml
  parameters:
    jobName: NT_test_installation_TestInstallWithCA_DNS2
    jobTitle: [NT] test_installation_TestInstallWithCA_DNS2
    testsToRun:
    - test_integration/test_installation.py::TestInstallWithCA_DNS2
    taskToRun: run-integration-tests
    topology:
      replica: 3

- template: templates/test-jobs.yml
  parameters:
    jobName: NT_test_installation_TestInstallWithCA_DNS3
    jobTitle: [NT] test_installation_TestInstallWithCA_DNS3
    testsToRun:
    - test_integration/test_installation.py::TestInstallWithCA_DNS3
    taskToRun: run-integration-tests

- template: templates/test-jobs.yml
  parameters:
    jobName: NT_test_installation_TestInstallWithCA_DNS4
    jobTitle: [NT] test_installation_TestInstallWithCA_DNS4
    testsToRun:
    - test_integration/test_installation.py::TestInstallWithCA_DNS4
    taskToRun: run-integration-tests

- template: templates/test-jobs.yml
  parameters:
    jobName: NT_test_installation_TestInstallWithCA_KRA_DNS1
    jobTitle: [NT] test_installation_TestInstallWithCA_KRA_DNS1
    testsToRun:
    - test_integration/test_installation.py::TestInstallWithCA_KRA_DNS1
    taskToRun: run-integration-tests
    topology:
      replica: 3

- template: templates/test-jobs.yml
  parameters:
    jobName: NT_test_installation_TestInstallWithCA_KRA_DNS2
    jobTitle: [NT] test_installation_TestInstallWithCA_KRA_DNS2
    testsToRun:
    - test_integration/test_installation.py::TestInstallWithCA_KRA_DNS2
    taskToRun: run-integration-tests
    topology:
      replica: 3

- template: templates/test-jobs.yml
  parameters:
    jobName: NT_test_installation_TestInstallMasterKRA
    jobTitle: [NT] test_installation_TestInstallMasterKRA
    testsToRun:
    - test_integration/test_installation.py::TestInstallMasterKRA
    taskToRun: run-integration-tests

- template: templates/test-jobs.yml
  parameters:
    jobName: NT_test_installation_TestInstallMasterDNS
    jobTitle: [NT] test_installation_TestInstallMasterDNS
    testsToRun:
    - test_integration/test_installation.py::TestInstallMasterDNS
    taskToRun: run-integration-tests

- template: templates/test-jobs.yml
  parameters:
    jobName: NT_test_idviews_TestIDViews
    jobTitle: [NT] test_idviews_TestIDViews
    testsToRun:
    - test_integration/test_idviews.py::TestIDViews
    taskToRun: run-integration-tests
    topology:
      client: 1

- template: templates/test-jobs.yml
  parameters:
    jobName: NT_test_caless_TestServerInstall
    jobTitle: [NT] test_caless_TestServerInstall
    testsToRun:
    - test_integration/test_caless.py::TestServerInstall
    taskToRun: run-integration-tests

- template: templates/test-jobs.yml
  parameters:
    jobName: NT_test_caless_TestReplicaInstall
    jobTitle: [NT] test_caless_TestReplicaInstall
    testsToRun:
    - test_integration/test_caless.py::TestReplicaInstall
    taskToRun: run-integration-tests
    topology:
      replica: 1

- template: templates/test-jobs.yml
  parameters:
    jobName: NT_test_caless_TestClientInstall
    jobTitle: [NT] test_caless_TestClientInstall
    testsToRun:
    - test_integration/test_caless.py::TestClientInstall
    taskToRun: run-integration-tests
    topology:
      client: 1

- template: templates/test-jobs.yml
  parameters:
    jobName: NT_test_caless_TestIPACommands
    jobTitle: [NT] test_caless_TestIPACommands
    testsToRun:
    - test_integration/test_caless.py::TestIPACommands
    taskToRun: run-integration-tests

- template: templates/test-jobs.yml
  parameters:
    jobName: NT_test_caless_TestCertInstall
    jobTitle: [NT] test_caless_TestCertInstall
    testsToRun:
    - test_integration/test_caless.py::TestCertInstall
    taskToRun: run-integration-tests

- template: templates/test-jobs.yml
  parameters:
    jobName: NT_test_caless_TestPKINIT
    jobTitle: [NT] test_caless_TestPKINIT
    testsToRun:
    - test_integration/test_caless.py::TestPKINIT
    taskToRun: run-integration-tests
    topology:
      replica: 1

- template: templates/test-jobs.yml
  parameters:
    jobName: NT_test_caless_TestReplicaCALessToCAFull
    jobTitle: [NT] test_caless_TestReplicaCALessToCAFull
    testsToRun:
    - test_integration/test_caless.py::TestReplicaCALessToCAFull
    taskToRun: run-integration-tests
    topology:
      replica: 1

- template: templates/test-jobs.yml
  parameters:
    jobName: NT_test_caless_TestServerCALessToExternalCA
    jobTitle: [NT] test_caless_TestServerCALessToExternalCA
    testsToRun:
    - test_integration/test_caless.py::TestServerCALessToExternalCA
    taskToRun: run-integration-tests

- template: templates/test-jobs.yml
  parameters:
    jobName: BASE_XMLRPC
    jobTitle: BASE and XMLRPC tests
    testsToRun:
    - test_cmdline
    - test_install
    - test_ipaclient
    - test_ipalib
    - test_ipaplatform
    - test_ipapython
    - test_ipaserver
    - test_ipatests_plugins
    - test_xmlrpc
    testsToIgnore:
    - test_integration
    - test_webui
    - test_ipapython/test_keyring.py
    testsToDedicate:
    - test_xmlrpc/test_dns_plugin.py
    taskToRun: run-tests
    tasksParallel: 3
